<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CommandContextAccessor.Configuration.NotSet" xml:space="preserve">
    <value>CommandContextConfiguration is not set.</value>
  </data>
  <data name="CommandUI.CommandFactory.Invalid" xml:space="preserve">
    <value>Invalid command.</value>
  </data>
  <data name="CommandUI.InvalidCurrentDirectoryFolder" xml:space="preserve">
    <value>CurrentDirectory folder provided does not exist.</value>
  </data>
  <data name="CommandUI.InvalidGlobalSettingsFolder" xml:space="preserve">
    <value>GlobalSettings folder provided does not exist.</value>
  </data>
  <data name="CommandUI.MissingCommand" xml:space="preserve">
    <value>Command not provided.</value>
  </data>
  <data name="Handlers.ErrorLog.InvalidParameter" xml:space="preserve">
    <value>Invalid parameter {0}</value>
  </data>
  <data name="Handlers.ErrorLog.StatusMessage" xml:space="preserve">
    <value>Error Log is currently {0}. Use `--enable` or `--disable` to change the status.</value>
  </data>
  <data name="Handlers.Pick.NotStagedItem" xml:space="preserve">
    <value>{0} - Not Staged</value>
  </data>
  <data name="Handlers.Pick.RequestClearList" xml:space="preserve">
    <value>Do you want to clear the list before adding new commits?</value>
  </data>
  <data name="Handlers.Pick.StagedItem" xml:space="preserve">
    <value>{0} - Staged</value>
  </data>
  <data name="Handlers.Pick.WarningCommitsInList" xml:space="preserve">
    <value>Warning: you have commits set in your list.</value>
  </data>
  <data name="Handlers.SetRepo.Cancel" xml:space="preserve">
    <value>No repository changes.</value>
  </data>
  <data name="Handlers.SetRepo.CurrentRepoInfo" xml:space="preserve">
    <value>Current Repository Location: {0}</value>
  </data>
  <data name="Handlers.SetRepo.Warning" xml:space="preserve">
    <value>Warning: A repository is already set in another location. Do you want to overwrite the current location set?</value>
  </data>
  <data name="Repository.ErrorLog.Log.UnhandledException" xml:space="preserve">
    <value>Unable to write in error log file. Execute the command 'git memory errorlog --disable' to turn error logs off.</value>
  </data>
  <data name="Repository.GlobalSettings.CreateJson.UnhandledException" xml:space="preserve">
    <value>Error creating file {0}.</value>
  </data>
  <data name="Repository.GlobalSettings.Write.UnhandledException" xml:space="preserve">
    <value>Unable to write value in Global Configuration.</value>
  </data>
  <data name="Repository.MemoryPool.Read.JsonNotFound" xml:space="preserve">
    <value>Json configuration file not found at {0}.</value>
  </data>
  <data name="Repository.MemoryPool.Read.UnhandledException" xml:space="preserve">
    <value>Unable to read git-memory.json.</value>
  </data>
  <data name="Repository.MemoryPool.Write.NullException" xml:space="preserve">
    <value>Memory pool should not be null.</value>
  </data>
  <data name="Repository.MemoryPool.Write.UnhandledException" xml:space="preserve">
    <value>Unable to write on git-memory.json.</value>
  </data>
  <data name="Repository.UserSettings.CreateFolder.UnhandledException" xml:space="preserve">
    <value>Error creating directory in {0}.</value>
  </data>
  <data name="Repository.UserSettings.CreateJson.UnhandledException" xml:space="preserve">
    <value>Error creating file for git-memory.json in {0}.</value>
  </data>
  <data name="Repository.UserSettings.HideFolder.UnhandledException" xml:space="preserve">
    <value>Error trying to hide folder {0}.</value>
  </data>
  <data name="Services.Pick.MissingArgument" xml:space="preserve">
    <value>No arguments provided.</value>
  </data>
  <data name="Services.Pick.Success" xml:space="preserve">
    <value>Commits added.</value>
  </data>
  <data name="Services.PickByList.GetCommit.Error" xml:space="preserve">
    <value>Error looking up commit {0}</value>
  </data>
  <data name="Services.PickByList.InvalidGitRepository" xml:space="preserve">
    <value>Git repository not found in the current directory.</value>
  </data>
  <data name="Services.PickByList.InvalidHash" xml:space="preserve">
    <value>Invalid hash: {0}</value>
  </data>
  <data name="Services.PickByList.UnhandledException" xml:space="preserve">
    <value>An error occurred while attempting to retrieve commits. Please refer to the error log for more details.</value>
  </data>
  <data name="Services.PickByNumber.Invalid" xml:space="preserve">
    <value>Invalid Number in parameter &lt;N&gt;</value>
  </data>
  <data name="Services.PickByNumber.InvalidGitRepository" xml:space="preserve">
    <value>Git repository not found in the current directory.</value>
  </data>
  <data name="Services.PickByNumber.NoCommits" xml:space="preserve">
    <value>Repository selected does not have any commits.</value>
  </data>
  <data name="Services.PickByNumber.UnhandledException" xml:space="preserve">
    <value>An error occurred while attempting to retrieve commits. Please refer to the error log for more details.</value>
  </data>
  <data name="Services.SetRepo.CreationSuccess" xml:space="preserve">
    <value>Memories Repository created successfully.</value>
  </data>
  <data name="Services.SetRepo.DirectoryNotFound" xml:space="preserve">
    <value>Directory not found.</value>
  </data>
  <data name="Services.SetRepo.ErrorHandlingDirectory" xml:space="preserve">
    <value>Error creating/reading directory in {0}</value>
  </data>
  <data name="Services.SetRepo.MissingArgument" xml:space="preserve">
    <value>No arguments provided.</value>
  </data>
  <data name="Services.Settings.DisableErrorLogResult" xml:space="preserve">
    <value>Error Logs disabled.</value>
  </data>
  <data name="Services.Settings.EnableErrorLogResult" xml:space="preserve">
    <value>Error Logs enabled.</value>
  </data>
  <data name="Services.Unpick.MissingArgument" xml:space="preserve">
    <value>No arguments provided.</value>
  </data>
  <data name="Services.Unpick.Success" xml:space="preserve">
    <value>Commits unpicked.</value>
  </data>
  <data name="Services.UnpickAll.GitRepositoryNotFound" xml:space="preserve">
    <value>Git repository not found in the current directory.</value>
  </data>
  <data name="Services.UnpickAll.Success" xml:space="preserve">
    <value>All commits unpicked.</value>
  </data>
  <data name="Services.UnpickAll.UnhandledException" xml:space="preserve">
    <value>An error occurred while attempting to unpick commits. Please refer to the error log for more details.</value>
  </data>
  <data name="Services.UnpickByList.GitRepositoryNotFound" xml:space="preserve">
    <value>Git repository not found in the current directory.</value>
  </data>
  <data name="Services.UnpickByList.UnhandledException" xml:space="preserve">
    <value>An error occurred while attempting to unpick commits. Please refer to the error log for more details.</value>
  </data>
  <data name="UserInteraction.OkCancel.Options" xml:space="preserve">
    <value>Type 'Y' (yes) to proceed or any other key to cancel.</value>
  </data>
  <data name="UserInteraction.YesNo.Invalid" xml:space="preserve">
    <value>Invalid Command. Answer 'Y' (yes) or 'N' (no) to proceed.</value>
  </data>
  <data name="UserInteraction.YesNo.Options" xml:space="preserve">
    <value>Answer 'Y' (yes) or 'N' (no) to proceed.</value>
  </data>
  <data name="UserInteraction.YesNoCancel.Options" xml:space="preserve">
    <value>Answer 'Y' (yes), 'N' (no) to proceed or any other key to Cancel.</value>
  </data>
</root>