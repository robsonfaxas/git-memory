//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GitMemory.CultureConfig {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class ResourceMessages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ResourceMessages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("GitMemory.CultureConfig.ResourceMessages", typeof(ResourceMessages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CommandContextConfiguration is not set..
        /// </summary>
        public static string CommandContextAccessor_Configuration_NotSet {
            get {
                return ResourceManager.GetString("CommandContextAccessor.Configuration.NotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid command..
        /// </summary>
        public static string CommandUI_CommandFactory_Invalid {
            get {
                return ResourceManager.GetString("CommandUI.CommandFactory.Invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CurrentDirectory folder provided does not exist..
        /// </summary>
        public static string CommandUI_InvalidCurrentDirectoryFolder {
            get {
                return ResourceManager.GetString("CommandUI.InvalidCurrentDirectoryFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GlobalSettings folder provided does not exist..
        /// </summary>
        public static string CommandUI_InvalidGlobalSettingsFolder {
            get {
                return ResourceManager.GetString("CommandUI.InvalidGlobalSettingsFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command not provided..
        /// </summary>
        public static string CommandUI_MissingCommand {
            get {
                return ResourceManager.GetString("CommandUI.MissingCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid parameter {0}.
        /// </summary>
        public static string Handlers_ErrorLog_InvalidParameter {
            get {
                return ResourceManager.GetString("Handlers.ErrorLog.InvalidParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error Log is currently {0}. Use `--enable` or `--disable` to change the status..
        /// </summary>
        public static string Handlers_ErrorLog_StatusMessage {
            get {
                return ResourceManager.GetString("Handlers.ErrorLog.StatusMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} - Not Staged.
        /// </summary>
        public static string Handlers_Pick_NotStagedItem {
            get {
                return ResourceManager.GetString("Handlers.Pick.NotStagedItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to clear the list before adding new commits?.
        /// </summary>
        public static string Handlers_Pick_RequestClearList {
            get {
                return ResourceManager.GetString("Handlers.Pick.RequestClearList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} - Staged.
        /// </summary>
        public static string Handlers_Pick_StagedItem {
            get {
                return ResourceManager.GetString("Handlers.Pick.StagedItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning: you have commits set in your list..
        /// </summary>
        public static string Handlers_Pick_WarningCommitsInList {
            get {
                return ResourceManager.GetString("Handlers.Pick.WarningCommitsInList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No repository changes..
        /// </summary>
        public static string Handlers_SetBrain_Cancel {
            get {
                return ResourceManager.GetString("Handlers.SetBrain.Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current Repository Location: {0}.
        /// </summary>
        public static string Handlers_SetBrain_CurrentRepoInfo {
            get {
                return ResourceManager.GetString("Handlers.SetBrain.CurrentRepoInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning: A repository is already set in another location. Do you want to overwrite the current location set?.
        /// </summary>
        public static string Handlers_SetBrain_Warning {
            get {
                return ResourceManager.GetString("Handlers.SetBrain.Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to write in error log file. Execute the command &apos;git memory errorlog --disable&apos; to turn error logs off..
        /// </summary>
        public static string Repository_ErrorLog_Log_UnhandledException {
            get {
                return ResourceManager.GetString("Repository.ErrorLog.Log.UnhandledException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error creating file {0}..
        /// </summary>
        public static string Repository_GlobalSettings_CreateJson_UnhandledException {
            get {
                return ResourceManager.GetString("Repository.GlobalSettings.CreateJson.UnhandledException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to write value in Global Configuration..
        /// </summary>
        public static string Repository_GlobalSettings_Write_UnhandledException {
            get {
                return ResourceManager.GetString("Repository.GlobalSettings.Write.UnhandledException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Json configuration file not found at {0}..
        /// </summary>
        public static string Repository_MemoryPool_Read_JsonNotFound {
            get {
                return ResourceManager.GetString("Repository.MemoryPool.Read.JsonNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to read git-memory.json..
        /// </summary>
        public static string Repository_MemoryPool_Read_UnhandledException {
            get {
                return ResourceManager.GetString("Repository.MemoryPool.Read.UnhandledException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Memory pool should not be null..
        /// </summary>
        public static string Repository_MemoryPool_Write_NullException {
            get {
                return ResourceManager.GetString("Repository.MemoryPool.Write.NullException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to write on git-memory.json..
        /// </summary>
        public static string Repository_MemoryPool_Write_UnhandledException {
            get {
                return ResourceManager.GetString("Repository.MemoryPool.Write.UnhandledException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error creating directory in {0}..
        /// </summary>
        public static string Repository_UserSettings_CreateFolder_UnhandledException {
            get {
                return ResourceManager.GetString("Repository.UserSettings.CreateFolder.UnhandledException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error creating file for git-memory.json in {0}..
        /// </summary>
        public static string Repository_UserSettings_CreateJson_UnhandledException {
            get {
                return ResourceManager.GetString("Repository.UserSettings.CreateJson.UnhandledException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error trying to hide folder {0}..
        /// </summary>
        public static string Repository_UserSettings_HideFolder_UnhandledException {
            get {
                return ResourceManager.GetString("Repository.UserSettings.HideFolder.UnhandledException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No arguments provided..
        /// </summary>
        public static string Services_Pick_MissingArgument {
            get {
                return ResourceManager.GetString("Services.Pick.MissingArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Commits added..
        /// </summary>
        public static string Services_Pick_Success {
            get {
                return ResourceManager.GetString("Services.Pick.Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error looking up commit {0}.
        /// </summary>
        public static string Services_PickByList_GetCommit_Error {
            get {
                return ResourceManager.GetString("Services.PickByList.GetCommit.Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Git repository not found in the current directory..
        /// </summary>
        public static string Services_PickByList_InvalidGitRepository {
            get {
                return ResourceManager.GetString("Services.PickByList.InvalidGitRepository", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid hash: {0}.
        /// </summary>
        public static string Services_PickByList_InvalidHash {
            get {
                return ResourceManager.GetString("Services.PickByList.InvalidHash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while attempting to retrieve commits. Please refer to the error log for more details..
        /// </summary>
        public static string Services_PickByList_UnhandledException {
            get {
                return ResourceManager.GetString("Services.PickByList.UnhandledException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Number in parameter &lt;N&gt;.
        /// </summary>
        public static string Services_PickByNumber_Invalid {
            get {
                return ResourceManager.GetString("Services.PickByNumber.Invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Git repository not found in the current directory..
        /// </summary>
        public static string Services_PickByNumber_InvalidGitRepository {
            get {
                return ResourceManager.GetString("Services.PickByNumber.InvalidGitRepository", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Repository selected does not have any commits..
        /// </summary>
        public static string Services_PickByNumber_NoCommits {
            get {
                return ResourceManager.GetString("Services.PickByNumber.NoCommits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while attempting to retrieve commits. Please refer to the error log for more details..
        /// </summary>
        public static string Services_PickByNumber_UnhandledException {
            get {
                return ResourceManager.GetString("Services.PickByNumber.UnhandledException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Memories Repository created successfully..
        /// </summary>
        public static string Services_SetBrain_CreationSuccess {
            get {
                return ResourceManager.GetString("Services.SetBrain.CreationSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory not found..
        /// </summary>
        public static string Services_SetBrain_DirectoryNotFound {
            get {
                return ResourceManager.GetString("Services.SetBrain.DirectoryNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error creating/reading directory in {0}.
        /// </summary>
        public static string Services_SetBrain_ErrorHandlingDirectory {
            get {
                return ResourceManager.GetString("Services.SetBrain.ErrorHandlingDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No arguments provided..
        /// </summary>
        public static string Services_SetBrain_MissingArgument {
            get {
                return ResourceManager.GetString("Services.SetBrain.MissingArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error Logs disabled..
        /// </summary>
        public static string Services_Settings_DisableErrorLogResult {
            get {
                return ResourceManager.GetString("Services.Settings.DisableErrorLogResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error Logs enabled..
        /// </summary>
        public static string Services_Settings_EnableErrorLogResult {
            get {
                return ResourceManager.GetString("Services.Settings.EnableErrorLogResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid hash: &apos;{0}&apos;..
        /// </summary>
        public static string Services_Stage_InvalidHash {
            get {
                return ResourceManager.GetString("Services.Stage.InvalidHash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing arguments..
        /// </summary>
        public static string Services_Stage_MissingArguments {
            get {
                return ResourceManager.GetString("Services.Stage.MissingArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Commit staged: {0}.
        /// </summary>
        public static string Services_Stage_StagedCommit {
            get {
                return ResourceManager.GetString("Services.Stage.StagedCommit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Commit(s) staged with success!.
        /// </summary>
        public static string Services_Stage_Success {
            get {
                return ResourceManager.GetString("Services.Stage.Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No commits were staged..
        /// </summary>
        public static string Services_Stage_SuccessZeroCommits {
            get {
                return ResourceManager.GetString("Services.Stage.SuccessZeroCommits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Status End..
        /// </summary>
        public static string Services_Status_End {
            get {
                return ResourceManager.GetString("Services.Status.End", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No commits are tracked..
        /// </summary>
        public static string Services_Status_NoCommits {
            get {
                return ResourceManager.GetString("Services.Status.NoCommits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Staged commits:.
        /// </summary>
        public static string Services_Status_StagedHeader {
            get {
                return ResourceManager.GetString("Services.Status.StagedHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t - {0} - {1}.
        /// </summary>
        public static string Services_Status_StagedItem {
            get {
                return ResourceManager.GetString("Services.Status.StagedItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unstaged commits:.
        /// </summary>
        public static string Services_Status_UnstagedHeader {
            get {
                return ResourceManager.GetString("Services.Status.UnstagedHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \t - {0} - {1}.
        /// </summary>
        public static string Services_Status_UnstagedItem {
            get {
                return ResourceManager.GetString("Services.Status.UnstagedItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No arguments provided..
        /// </summary>
        public static string Services_Unpick_MissingArgument {
            get {
                return ResourceManager.GetString("Services.Unpick.MissingArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Commits unpicked..
        /// </summary>
        public static string Services_Unpick_Success {
            get {
                return ResourceManager.GetString("Services.Unpick.Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Git repository not found in the current directory..
        /// </summary>
        public static string Services_UnpickAll_GitRepositoryNotFound {
            get {
                return ResourceManager.GetString("Services.UnpickAll.GitRepositoryNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All commits unpicked..
        /// </summary>
        public static string Services_UnpickAll_Success {
            get {
                return ResourceManager.GetString("Services.UnpickAll.Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while attempting to unpick commits. Please refer to the error log for more details..
        /// </summary>
        public static string Services_UnpickAll_UnhandledException {
            get {
                return ResourceManager.GetString("Services.UnpickAll.UnhandledException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Git repository not found in the current directory..
        /// </summary>
        public static string Services_UnpickByList_GitRepositoryNotFound {
            get {
                return ResourceManager.GetString("Services.UnpickByList.GitRepositoryNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while attempting to unpick commits. Please refer to the error log for more details..
        /// </summary>
        public static string Services_UnpickByList_UnhandledException {
            get {
                return ResourceManager.GetString("Services.UnpickByList.UnhandledException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid hash: &apos;{0}&apos;..
        /// </summary>
        public static string Services_Unstage_InvalidHash {
            get {
                return ResourceManager.GetString("Services.Unstage.InvalidHash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing arguments..
        /// </summary>
        public static string Services_Unstage_MissingArguments {
            get {
                return ResourceManager.GetString("Services.Unstage.MissingArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Commit(s) unstaged with success!.
        /// </summary>
        public static string Services_Unstage_Success {
            get {
                return ResourceManager.GetString("Services.Unstage.Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No commits were unstaged..
        /// </summary>
        public static string Services_Unstage_SuccessZeroCommits {
            get {
                return ResourceManager.GetString("Services.Unstage.SuccessZeroCommits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Commit unstaged: {0}.
        /// </summary>
        public static string Services_Unstage_UnstagedCommit {
            get {
                return ResourceManager.GetString("Services.Unstage.UnstagedCommit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type &apos;Y&apos; (yes) to proceed or any other key to cancel..
        /// </summary>
        public static string UserInteraction_OkCancel_Options {
            get {
                return ResourceManager.GetString("UserInteraction.OkCancel.Options", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Command. Answer &apos;Y&apos; (yes) or &apos;N&apos; (no) to proceed..
        /// </summary>
        public static string UserInteraction_YesNo_Invalid {
            get {
                return ResourceManager.GetString("UserInteraction.YesNo.Invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Answer &apos;Y&apos; (yes) or &apos;N&apos; (no) to proceed..
        /// </summary>
        public static string UserInteraction_YesNo_Options {
            get {
                return ResourceManager.GetString("UserInteraction.YesNo.Options", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Answer &apos;Y&apos; (yes), &apos;N&apos; (no) to proceed or any other key to Cancel..
        /// </summary>
        public static string UserInteraction_YesNoCancel_Options {
            get {
                return ResourceManager.GetString("UserInteraction.YesNoCancel.Options", resourceCulture);
            }
        }
    }
}
